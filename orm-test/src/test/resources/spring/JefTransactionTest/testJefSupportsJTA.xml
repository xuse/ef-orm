<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-3.0.xsd
	 http://www.springframework.org/schema/tx 
	 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


<!-- 
属性配置1
	<context:property-placeholder location="classpath:system-dev.properties"/>
属性配置2
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
		<property name="searchSystemEnvironment" value="true"/>
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
		<property name="locations">
	     <list>
	        <value>classpath:${app.name}_jdbc.properties</value>
	        <value>classpath:${app.name}_app.properties</value>
	     </list>
	  </property> 
	</bean>
	 -->	
	

	<!-- JTA数据源配置一，使用 com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean 直接配置原始的DriverClass-->
	<bean id="ds1" class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean"
	p:uniqueResourceName="mysql/ds1" 
	p:url="jdbc:mysql://localhost:3306/test" 
	p:user="root"
	p:password="admin"
	p:driverClassName="org.gjt.mm.mysql.Driver">
		<property name="poolSize" value="3"/>
		<property name="borrowConnectionTimeout" value="60" />
	</bean>

	<bean id="ds2" class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean"
	p:uniqueResourceName="mysql/ds2"
	p:url="jdbc:mysql://localhost:3306/test" 
	p:user="root" 
	p:password="admin"
	p:driverClassName="org.gjt.mm.mysql.Driver">
		<property name="poolSize" value="3"/>
		<property name="borrowConnectionTimeout" value="60" />
	</bean>
	
	<!-- JTA数据源配置二，使用 com.atomikos.jdbc.AtomikosDataSourceBean 需要根据驱动配置驱动的XA实现类。 Oracle的实现类是oracle.jdbc.xa.client.OracleXADataSource -->
<!-- 
	<bean id="ds1" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName">
			<value>mysql/ds1</value>
		</property>
		<property name="xaDataSourceClassName">
			<value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value>
		</property>
		<property name="xaProperties">
			<props>
				<prop key="URL">jdbc:mysql://localhost:3306/test</prop>
				<prop key="user">root</prop>
				<prop key="password">admin</prop>
			</props>
		</property>
		<property name="poolSize">
			<value>3</value>
		</property>
		<property name="maxPoolSize">
			<value>30</value>
		</property>
	</bean>
	 
	

	<bean id="ds2" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName">
			<value>mysql/ds2</value>
		</property>
		<property name="xaDataSourceClassName">
			<value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value>
		</property>
		<property name="xaProperties">
			<props>
				<prop key="URL">jdbc:mysql://localhost:3306/test</prop>
				<prop key="user">root</prop>
				<prop key="password">admin</prop>
			</props>
		</property>
		<property name="poolSize">
			<value>3</value>
		</property>
		<property name="maxPoolSize">
			<value>30</value>
		</property>
	</bean>
-->
	<bean id="routingDatasource" class="jef.database.datasource.RoutingDataSource">
		<property class="jef.database.datasource.SpringBeansDataSourceLookup"　/>
	</bean>
	<!-- DAL配置,目前只支持单个数据源的配置 -->
	<bean id="entityManagerFactory" class="org.easyframe.enterprise.spring.SessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="biz" class="ailk.easyframe.testp.jta.dao.Bizimpl">
		<property name="productDao" ref="productDao" />
		<property name="userDao" ref="userDao" />
	</bean>
	<bean id="userDao" class="ailk.easyframe.testp.jta.dao.UserDaoimpl">
		<property name="sessionFactory" ref="sessionFactory1" />
	</bean>
	<bean id="productDao" class="ailk.easyframe.testp.jta.dao.ProductDaoimpl">
		<property name="sessionFactory" ref="sessionFactory2" />
	</bean>


	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="userTransaction">
			<bean class="com.atomikos.icatch.jta.UserTransactionImp"
				p:transactionTimeout="240" />
		</property>
		<property name="transactionManager">
			<bean class="com.atomikos.icatch.jta.UserTransactionManager"
				init-method="init" destroy-method="close" p:forceShutdown="true" />
		</property>
	</bean>



	<tx:advice id="advice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="*" read-only="false" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="point"
			expression=" execution(* ailk.easyframe.testp.jta.dao.Biz*.*(..))" />
		<aop:advisor advice-ref="advice" pointcut-ref="point" />
	</aop:config>


</beans>
